<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gyhstudy.springboot.mybatis.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="Student">
    <id column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="hometown" jdbcType="VARCHAR" property="hometown" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <association property="clazz" javaType="Clazz">
      <id column="clazz_id" property="clazzId"/>
      <result column="clazz_name" property="clazzName"/>
    </association>
    <collection property="course" ofType="Course">
      <id column="course_id" property="courseId"/>
      <result column="course_name" property="courseName"/>
    </collection>

  </resultMap>
  <!--  根据主键id查询学生-->
  <select id="selectByPrimaryKey" parameterType="Integer" resultType="Student">
    select *
    from t_student
    where student_id = #{studentId,jdbcType=INTEGER}
  </select>

  <!--  根据主键id删除学生-->
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    delete from t_student
    where student_id = #{studentId,jdbcType=INTEGER}
  </delete>

  <!--  新增学生-->
  <insert id="insert" keyColumn="student_id" keyProperty="studentId" parameterType="com.gyhstudy.springboot.mybatis.domain.Student" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_student (clazz_id, student_name, hometown,
    birthday)
    values (#{clazzId,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, #{hometown,jdbcType=VARCHAR},
    #{birthday,jdbcType=DATE})
  </insert>

  <!--   根据学生id修改学生信息-->
  <update id="updateByPrimaryKeySelective" parameterType="com.gyhstudy.springboot.mybatis.domain.Student">
    <!--@mbg.generated-->
    update t_student
    <set>
      <if test="clazzId != null">
        clazz_id = #{clazzId,jdbcType=INTEGER},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="hometown != null">
        hometown = #{hometown,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>

  <!--  批量新增学生-->
  <insert id="batchInsert" parameterType="Student">
    insert into t_student values
    <foreach collection="students" item="student" index="index" separator=",">
      (#{student.studentId}, #{student.clazzId}, #{student.studentName}, #{student.hometown}, #{student.birthday})
    </foreach>

  </insert>

  <!--    根据id批量删除学生-->
  <delete id="batchDelete" parameterType="Integer">
    delete from
    t_student where student_id in
    <foreach collection="idList" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

  <!--  批量修改学生信息-->
  <update id="batchUpdate" parameterType="java.util.List">
    <foreach collection="students" item="item" index="index" open="" close="" separator=";">

      update t_student t
      <set>
        <if test="item.clazzId != null">
          `clazz_id` = #{item.clazzId,jdbcType=INTEGER},
        </if>
        <if test="item.studentName != null">
          `student_name` = #{item.studentName,jdbcType=VARCHAR},
        </if>
        <if test="item.hometown != null">
          `hometown` = #{item.hometown,jdbcType=VARCHAR},
        </if>
        <if test="item.birthday != null">
          `birthday` = #{item.birthday,jdbcType=DATE},
        </if>
      </set>
      where t.student_id = #{item.studentId}
    </foreach>
  </update>

<!--    动态单表查询-->
    <select id="selectByDynamicSql" parameterType="Student" resultMap="BaseResultMap">
          select * from t_student where 1 = 1
      <choose>
        <when test="clazzId != null ">
          and clazz_id =#{clazzId}
        </when>
        <when test="hometown != null">
          and hometown like "%"#{hometown}"%"
        </when>
      </choose>
    </select>

<!--  根据学生查询班级信息-->
  <select id="getClazzManyToOne" resultMap="BaseResultMap">
    select student_id, t_student.clazz_id, student_name, hometown, birthday, t_clazz.clazz_id, clazz_name
    from t_student , t_clazz
    where t_student.student_id = #{studentId}
    and t_student.clazz_id = t_clazz.clazz_id
  </select>

  <!--  根据学生查询学生的班级信息，以及学生的选课信息-->
  <select id="getStudentALl" resultMap="BaseResultMap">
    select s.student_id,s.student_name,s.hometown,s.birthday,tc.clazz_id,
    tc.clazz_name,t.course_id,t.course_name
    from t_student s
    left join t_clazz tc on s.clazz_id = tc.clazz_id
    left join t_course_student tcs on s.student_id = tcs.student_id
    left join t_course t on tcs.course_id = t.course_id
    where s.student_id = #{studentId}
  </select>
</mapper>